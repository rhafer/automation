heat_template_version: 2016-10-14

description: >
  Template for deploying Ardana in a multinode setup

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
    default: engcloud-cloud-ci
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    default: cleanvm-jeos-SLE12SP3
  instance_type_controller:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used for the controller
    default: ardana-job-controller
  instance_type_compute:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used for compute nodes
    default: m1.large
  number_of_computes:
    type: number
    description: Count of compute nodes to create
    default: 2
  number_of_controllers:
    type: number
    description: Count of controller nodes to create
    default: 1

resources:
  # networks
  network_mgmt:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: False
  network_ardana:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: False
  network_external:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: False
  network_unused:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: False
  network_guest:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: False
  network_iscsi:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: False
  network_tenant:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: False
  network_hostname:
    type: OS::Neutron::Net
    properties:
      port_security_enabled: False

  # subnet
  subnet_mgmt:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network_mgmt }
      cidr: "192.168.245.0/24"
      allocation_pools:
          - start: "192.168.245.2"
            end: "192.168.245.100"
      ip_version: 4
      gateway_ip: 192.168.245.1
  subnet_ardana:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network_ardana }
      cidr: "192.168.110.0/24"
      allocation_pools:
          - start: "192.168.110.2"
            end: "192.168.110.100"
      ip_version: 4
      gateway_ip: null
  subnet_external:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network_external }
      allocation_pools:
          - start: "172.31.0.2"
            end: "172.31.255.154"
      cidr: "172.31.0.0/16"
      enable_dhcp: False
      gateway_ip: 172.31.0.1
  subnet_unused:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network_unused }
      allocation_pools:
          - start: "172.32.0.2"
            end: "172.32.0.127"
      cidr: "172.32.0.0/24"
      enable_dhcp: False
  subnet_guest:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network_guest }
      enable_dhcp: False
      allocation_pools:
          - start: "192.168.115.2"
            end: "192.168.115.250"
      cidr: "192.168.115.0/24"
      enable_dhcp: False
      gateway_ip: 192.168.115.1
  subnet_iscsi:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network_iscsi }
      enable_dhcp: False
      allocation_pools:
          - start: "192.168.113.2"
            end: "192.168.113.250"
      cidr: "192.168.113.0/24"
      enable_dhcp: False
      gateway_ip: 192.168.113.1
  subnet_tenant:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network_tenant }
      allocation_pools:
          - start: "172.30.0.2"
            end: "172.30.0.127"
      cidr: "172.30.0.0/24"
      enable_dhcp: False
  subnet_hostname:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network_hostname }
      enable_dhcp: False
      allocation_pools:
          - start: "192.168.111.2"
            end: "192.168.111.250"
      cidr: "192.168.111.0/24"
      enable_dhcp: False
      gateway_ip: 192.168.111.1

  # router
  router_mgmt:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: floating

  router_mgmt_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router_mgmt }
      subnet_id: { get_resource: subnet_mgmt }

  router_external_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router_mgmt }
      subnet_id: { get_resource: subnet_external }

  # floating IPs
  deployer-floatingip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: floating
  # instances
  deployer:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: instance_type_controller }
      networks:
        - network: { get_resource: network_mgmt }
        - network: { get_resource: network_ardana }
        - network: { get_resource: network_external }
        - network: { get_resource: network_guest }
        - network: { get_resource: network_unused }
        - network: { get_resource: network_iscsi }
        - network: { get_resource: network_tenant }
        - network: { get_resource: network_hostname }

  controllers:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: number_of_controllers }
      resource_def:
        type: heat-ardana-std-controller.yaml
        properties:
          key_name: { get_param: key_name }
          index: "%index%"
          image_id: { get_param: image_id }
          instance_type_controller: { get_param: instance_type_controller }
          networks:
              - network: { get_resource: network_mgmt }
              - network: { get_resource: network_ardana }
              - network: { get_resource: network_external }
              - network: { get_resource: network_guest }
              - network: { get_resource: network_unused }
              - network: { get_resource: network_iscsi }
              - network: { get_resource: network_tenant }
              - network: { get_resource: network_hostname }
  computes:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: number_of_computes }
      resource_def:
        type: OS::Nova::Server
        properties:
          name: compute%index%
          key_name: { get_param: key_name }
          image: { get_param: image_id }
          flavor: { get_param: instance_type_compute }
          networks:
            - network: { get_resource: network_mgmt }
            - network: { get_resource: network_ardana }
            - network: { get_resource: network_external }
            - network: { get_resource: network_guest }
            - network: { get_resource: network_unused }
            - network: { get_resource: network_iscsi }
            - network: { get_resource: network_tenant }
            - network: { get_resource: network_hostname }

  deployer-floating-assignment:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: deployer-floatingip }
      port_id: {get_attr: [deployer, addresses, { get_resource: network_mgmt }, 0, port]}

outputs:
  # deployer
  deployer-ip-floating:
    description: Floating IP address of the deployer node
    value: { get_attr: [deployer-floatingip, floating_ip_address] }

  deployer-net-mgmt-ip:
    description: IP address of the deployer in the mgmt network
    value: { get_attr: [deployer, networks, { get_resource: network_mgmt }, 0]}

  # controller
  controllers-net-mgmt-ips:
    description: List of IPs of the controllers in the mgmt network
    value: { list_join: ["\n", { get_attr: [controllers, networks, { get_resource: network_mgmt }, 0]} ]}

  # computes
  computes-net-mgmt-ips:
    description: List of IPs of the computes on the mgmt network
    value: { list_join: ["\n", { get_attr: [computes, networks, { get_resource: network_mgmt }, 0]} ]}

  # network info
  network-mgmt-id:
    description: Neutron Network ID of management network
    value: { get_resource: network_mgmt }
